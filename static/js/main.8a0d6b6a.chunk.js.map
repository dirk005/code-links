{"version":3,"sources":["components/card.jsx","components/card-list.jsx","components/select-type.jsx","containers/App.js","theme/Theme.js","index.js"],"names":["useStyles","makeStyles","theme","card","margin","width","minHeight","breakpoints","down","avatar","backgroundColor","height","image","CardItem","link","classes","Card","className","CardHeader","Avatar","aria-label","src","imageLink","alt","name","action","IconButton","href","target","rel","title","CardContent","Typography","variant","color","component","description","CardList","links","Grid","item","container","justifyContent","map","key","root","palette","background","paper","overflowY","scrollbarColor","common","red","scrollbarWidth","boxShadow","SelectType","setViewType","useState","selectedIndex","setSelectedIndex","List","text","index","ListItem","button","selected","onClick","ListItemText","primary","drawerWidth","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","content","flexGrow","contentShift","App","useTheme","setLinks","viewType","open","setOpen","useEffect","fetch","then","resp","json","catch","err","console","log","filterLinks","filter","type","includes","CssBaseline","AppBar","position","clsx","Toolbar","edge","noWrap","Drawer","anchor","direction","Divider","length","Red","Blue","White","Grey","createTheme","blue","white","grey","main","secondary","typography","h4","fontSize","fontWeight","body1","caption","overrides","MuiCssBaseline","body","overflowX","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.8a0d6b6a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  makeStyles,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  Typography,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\n\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: \"1em\",\r\n    width: \"30em\",\r\n    minHeight: 200,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"25em\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"20em\",\r\n    },\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"transparent\",\r\n    width: 70,\r\n    height: 70,\r\n  },\r\n  image: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n}));\r\n// Display all details of a link\r\nconst CardItem = ({ link }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            <img\r\n              className={classes.image}\r\n              src={link.imageLink}\r\n              alt={link.name}\r\n            />\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <a href={link.link} target=\"_blank\" rel=\"noreferrer\">\r\n              <OpenInNewIcon />\r\n            </a>\r\n          </IconButton>\r\n        }\r\n        title={link.name}\r\n      />\r\n\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {link.description}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardItem;\r\n","import React from \"react\";\r\nimport CardItem from \"./card\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst CardList = ({ links }) => {\r\n  return (\r\n    <Grid item container justifyContent=\"center\">\r\n      {\r\n        // Map over links to display one at a time\r\n        links.map((link, key) => (\r\n          <Grid item>\r\n            <CardItem link={link} key={key} />\r\n          </Grid>\r\n        ))\r\n      }\r\n    </Grid>\r\n  );\r\n};\r\nexport default CardList;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: \"100vh\",\r\n    overflowY: \"scroll\",\r\n    scrollbarColor: `${theme.palette.common.red} transparent`,\r\n    scrollbarWidth: \"thin\",\r\n    \"&::-webkit-scrollbar-track\": {\r\n      width: \"0.2rem\",\r\n      \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0, 0, 0, 0.1)\",\r\n      boxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.1)\",\r\n      backgroundColor: theme.palette.common.red,\r\n    },\r\n\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \"0.2rem\",\r\n      backgroundColor: theme.palette.common.red,\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      width: \"0.2rem\",\r\n      backgroundColor: theme.palette.common.red,\r\n    },\r\n  },\r\n}));\r\n\r\n//Print type to display buttons\r\nconst SelectType = ({ setViewType }) => {\r\n  const classes = useStyles();\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n  const linkList = [\r\n    { name: \"All\", description: \"All\" },\r\n    { name: \"Nodejs\", description: \"Node.js\" },\r\n    { name: \"React\", description: \"React.js\" },\r\n    { name: \"Redux\", description: \"Redux\" },\r\n    { name: \"git\", description: \"GIT\" },\r\n    { name: \"javascript\", description: \"Java Script\" },\r\n    { name: \"HTML\", description: \"HTML\" },\r\n    { name: \"CSS\", description: \"CSS\" },\r\n    { name: \"styleguide\", description: \"Style guides\" },\r\n    { name: \"database\", description: \"Database\" },\r\n    { name: \"sql\", description: \"SQL\" },\r\n    { name: \"mongodb\", description: \"Mongodb\" },\r\n    { name: \"Python\", description: \"Python\" },\r\n    { name: \"ml\", description: \"Machine Learning\" },\r\n    { name: \"API\", description: \"API\" },\r\n    { name: \"HTTP\", description: \"HTTP\" },\r\n    { name: \"Hacking\", description: \"Hacking\" },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List>\r\n        {linkList.map((text, index) => (\r\n          <ListItem\r\n            button\r\n            key={text.name}\r\n            selected={index === selectedIndex}\r\n            onClick={() => {\r\n              setViewType(text.name);\r\n              setSelectedIndex(index);\r\n            }}\r\n          >\r\n            <ListItemText primary={text.description} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectType;\r\n","import React, { useState, useEffect } from \"react\";\nimport CardList from \"../components/card-list\";\nimport SelectType from \"../components/select-type\";\nimport clsx from \"clsx\";\nimport {\n  Typography,\n  Drawer,\n  CssBaseline,\n  AppBar,\n  Toolbar,\n  Divider,\n  IconButton,\n} from \"@material-ui/core\";\nimport { useTheme, makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [links, setLinks] = useState([]);\n  const [viewType, setViewType] = useState(\"All\");\n\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    //Get links from json file om github\n    fetch(\"https://dirk005.github.io/Projects-json/json/links.json\")\n      .then((resp) => resp.json())\n      .then((links) => setLinks(links))\n      .catch((err) => console.log(err));\n  }, []);\n\n  // Filter sites by button clicked\n  const filterLinks = links.filter((link) => {\n    return link.type.includes(viewType);\n  });\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Useful Code Links\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <SelectType setViewType={setViewType} />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {\n          // Check array if any links in list  -> Print list of links\n          filterLinks.length !== 0 ? <CardList links={filterLinks} /> : null\n        }\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import { createTheme } from \"@material-ui/core/styles\";\r\n\r\nconst Red = \"#ff6347\";\r\nconst Blue = \"#33ccff \";\r\nconst White = \"#f8f6f6\";\r\nconst Grey = \"#1f1f1f\";\r\n\r\nexport default createTheme({\r\n  palette: {\r\n    common: {\r\n      red: Red,\r\n      blue: Blue,\r\n      white: White,\r\n      grey: Grey,\r\n    },\r\n    primary: {\r\n      main: Blue,\r\n    },\r\n    secondary: {\r\n      main: Red,\r\n    },\r\n  },\r\n  typography: {\r\n    h4: {\r\n      fontSize: \"1.5rem\",\r\n      color: White,\r\n      fontWeight: 600,\r\n    },\r\n    body1: {\r\n      fontSize: \"0.75rem\",\r\n      color: Grey,\r\n      fontWeight: 300,\r\n    },\r\n    caption: {\r\n      fontSize: \"1rem\",\r\n      fontWeight: 300,\r\n      color: Grey,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        body: {\r\n          backgroundColor: Red,\r\n          overflowX: \"hidden\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\n\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme/Theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}